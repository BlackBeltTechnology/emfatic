<%@ jet package="translated" class="AllExtentSets" %>
package jql.tracker;

import java.util.HashSet;
import java.util.Hashtable;
import java.util.Set;

public class AllExtentSets {
	
	public static final Hashtable<Class, InterfaceExtent> extents = new Hashtable<Class, InterfaceExtent>();
	
	public static synchronized ExtentSet getExtentSet(Class c){
		ExtentSet s = (ExtentSet) extents.get(c);		
		if(s==null){
			s = new ExtentSet();
			extents.put(c,s);
			Class d = c.getSuperclass();
			if(d!= null)
				getExtentSet(d).link(s);
			for(Class<? extends Object> I : c.getInterfaces())
				getInterfaceExtent(I).link(s);
		}
		return s;
	}
	
	public static InterfaceExtent getInterfaceExtent(Class c){
		InterfaceExtent s = extents.get(c);
		if(s==null){
			s = new InterfaceExtent();
			extents.put(c,s);
			for(Class I : c.getInterfaces()){
				getInterfaceExtent(I).link(s);
			}
		}
		return s;
	}
	
	public static Set<? extends Object> allInstancesForClass(Class<? extends Object> c) {
		ExtentSet es = getExtentSet(c);
		Set<Object> res = new HashSet<Object>();
		for (Object o : es) {
			res.add(o);
		}
		return res;
	}
}
