<%@ jet package="translated" imports="java.util.*" class="ObjectTrackerAspect" %>

// (C) Copyright Darren Willis, David James Pearce and James Noble 2005. 
// Permission to copy, use, modify, sell and distribute this software 
// is granted provided this copyright notice appears in all copies. 
// This software is provided "as is" without express or implied 
// warranty, and with no claim as to its suitability for any purpose.
//
// Email: david.pearce@mcs.vuw.ac.nz

/*
 * ObjectTracker
 * Captures object creation events and adds them to the extent collection of objects.
  */

package jql.tracker;
<% List<String> classNames = (List<String>) argument; %>

public privileged aspect ObjectTracker {
	pointcut newObject() : (<% Iterator<String> it = classNames.iterator();
							while (it.hasNext()) { %>call(<%=it.next()%>.new(..))<% if(it.hasNext()) { %> ||
							<% } } %>
							) && !within(jql.tracker.*);
							
	after() returning(Object o) : newObject() {	
		Class tmp = o.getClass();
		ExtentSet c = AllExtentSets.getExtentSet(tmp);
		c.add(o);		
	}
}